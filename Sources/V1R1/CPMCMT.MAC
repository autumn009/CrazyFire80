; FROM CPM FILE TO CMT(PC-8801) OUTPUT
; 	1200BPS PC8801 CMT I/F  V1.0
;		BY AKI
.Z80
	EXT	SERFLG,OUTINI,OUTCHR,OUTEND
	EXT	ININI,INCHR,INEND,TPRERR
	EXT	CONOUT
	EXT	SETFCB,GETFN,PRCRLF,PRSTR
	EXT	CONIN,OPENER,SETDMA,READ
	EXT	MAKEER,WRITER,CLOSER
	EXT	ENDALL
;
REBOOT	EQU	0
BDOS	EQU	5
;
;
;
START:	LD	SP,100H
	LD	DE,OPNMSG
	CALL	PRSTR
	XOR	A
	LD	(FILEF),A	;FILE NOT ON BUFFER
	LD	HL,1
	LD	(BLOCKS),HL
CMMAND:	LD	SP,100H
	CALL	PRCRLF
	LD	DE,CMDMSG
	CALL	PRSTR
	CALL	CONIN
	CP	'L'
	JP	Z,LOAD
	CP	'S'
	JP	Z,SAVE
	CP	'V'
	JP	Z,VERIFY
	JR	CMMAND
;
LOAD:
;
.8080
;
	LHLD	BDOS+1
	LXI	D,ENDALL
	MOV	A,L
	SUB	E
	MOV	A,H
	SBB	D
	SUI	2
	MOV	L,A
	MVI	H,0
	DAD	H
	SHLD	BLOCKS
;
TRNSF::	LXI	D,FCB1
	CALL	SETFCB
	LXI	D,MES1
	CALL	GETFN
	ORA	A
	JZ	TRNSF
	LXI	D,FCB2
	CALL	SETFCB
	LXI	D,MES2
	CALL	GETFN
	ORA	A
	JZ	TRNSF
	MVI	C,13
	CALL	BDOS
	CALL	PRCRLF
;
	CALL	READBF
;	CALL	WRITBF
;
	JMP	CMMAND
;
READBF::
	LXI	D,FCB1
	CALL	SETFCB
	CALL	OPENER
	ORA	A
	JZ	0
	LHLD	BLOCKS
	LXI	B,0
	LXI	D,ENDALL
RBF10:	PUSH	H
	PUSH	D
	PUSH	B
	CALL	SETDMA
	CALL	READ
	POP	B
	POP	D
	POP	H
	ORA	A
	JZ	RBF20
	DCX	H
	MOV	A,L
	ANA	H
	INR	A
	JZ	MEMOVR
	INX	B
	PUSH	H
	LXI	H,128
	DAD	D
	XCHG
	POP	H
	JMP	RBF10
;
RBF20:	MOV	L,C
	MOV	H,B
	SHLD	BLOCKS
	RET
;
MEMOVR::
	LXI	D,MES4
	CALL	PRSTR
	JMP	REBOOT
;
WRITBF::
	LXI	D,FCB2
	CALL	SETFCB
	CALL	MAKEER
	ORA	A
	JZ	REBOOT
	LHLD	BLOCKS
	LXI	D,ENDALL
WBF10:	PUSH	H
	PUSH	D
	CALL	SETDMA
	CALL	WRITER
	ORA	A
	JZ	REBOOT
	POP	D
	LXI	H,128
	DAD	D
	XCHG
	POP	H
	DCX	H
	MOV	A,L
	ORA	H
	JNZ	WBF10
	CALL	CLOSER
	ORA	A
	JZ	REBOOT
	RET
;
;
MES1:	DB	'ENTER SOURCE FILE NAME:$'
MES2:	DB	' DISTINATION FILE NAME:$'
MES3:	DB	'PUSH SPACE BAR TO CONTINUE:$'
MES4:	DB	'OUT OF MEMORY!!!$'
;
FCB1::	DS	36
FCB2::	DS	36
BLOCKS:	DS	2
;
.Z80
;
SAVE:	CALL	OUTINI
	LD	DE,SAVMES
	CALL	PRSTR
;
	LD	A,0AAH
	CALL	OUTCHR
	LD	A,55H
	CALL	OUTCHR
	LD	A,'C'
	CALL	OUTCHR
	LD	A,'P'
	CALL	OUTCHR
	LD	A,'M'
	CALL	OUTCHR
	XOR	A
	CALL	OUTCHR
	LD	DE,FCB1+1
	LD	B,8+3
SVFN:	LD	A,(DE)
	CALL	OUTCHR
	DJNZ	SVFN
	CALL	WAIT1
;
	LD	DE,BLOCKS
	LD	HL,ENDALL
SVDT:	LD	A,55H
	CALL	OUTCHR
	LD	B,128
	LD	C,0
SVBLK:	LD	A,(HL)
	ADD	C
	LD	C,A
	LD	A,(HL)
	CALL	OUTCHR
	INC	HL
	DJNZ	SVBLK
	LD	A,C
	CALL	OUTCHR
	DEC	DE
	LD	A,C
	OR	B
	JR	NZ,SVDT
	LD	A,1AH		;EOF MARK
	CALL	OUTCHR
	CALL	OUTEND		;CLOSE CMT
	RET
;
VERIFY:	LD	A,1
	LD	(SERFLG),A
	CALL	ININI
	JP	NZ,STOPED
	LD	DE,VERMES
	CALL	PRSTR
SERHED:	CALL	INCHR
	JP	NZ,STOPED
	CP	0AAH
	JR	NZ,SERHED
	CALL	INCHR
	JP	NZ,STOPED
	CP	55H
	JR	NZ,SERHED
	LD	B,8+3+4
PRTHED:	CALL	INCHR
	JP	NZ,STOPED
	CALL	CONOUT
	DJNZ	PRTHED
	XOR	A
	LD	(SERFLG),A
	LD	HL,ENDALL
VERDT:	CALL	INCHR
	JP	NZ,STOPED
	CP	1AH
	JP	Z,VEREOF
	CP	55H
	JP	NZ,TPRERR
	LD	B,128
	LD	C,0
VERBLK:	CALL	INCHR
	JP	NZ,STOPED
	PUSH	AF
	ADD	A,C
	LD	C,A
	POP	AF
	CP	(HL)
	JP	NZ,VERERR
	INC	HL
	DJNZ	VERBLK
	CALL	INCHR
	JP	NZ,STOPED
	CP	C
	JP	NZ,VERERR
	JR	VERDT
;
VEREOF:	CALL	INEND
	LD	DE,VOKMSG
	CALL	PRSTR
	JP	CMMAND
;
VERERR:	CALL	INEND
	LD	DE,VNGMES
	CALL	PRSTR
	JP	CMMAND
;
;
OPNMSG:	DEFB	'CPM TO CMT FOR PC-8801$'
CMDMSG:	DEFB	"'L'for load buffer,'S'for save to CMT,'V'for verify CMT:$'
LOAMSG:	DEFB	'LOADING FILE:$'
SAVMSG:	DEFB	'SAVING FILE:$'
VERMSG:	DEFB	'VERIFYING FILE:$'
VOKMES:	DEFB	0DH,0AH,'Verify OK!',0DH,0AH,'$'
VNGMES:	DEFB	0AH,0DH,'Verify Error!!!!!!',7,0DH,0AH,'$'
TPRMES:	DEFB	0DH,0AH,'TAPE READ ERROR!!!!!',7,0DH,0AH,'$'
INTMES:	DEFB	0DH,0AH,'INTERRUPTED!!!',7,0DH,0AH,'$'
;
TPRERR:
	LD	A,(SERFLG)
	AND	A
	RET	NZ
	LD	DE,TPRMES
	CALL	PRSTR
	JP	CMMAND
;
STOPED:	LD	DE,INTMES
	CALL	PRSTR
	JP	CMMAND
;
;
	END	START
D	(IX+IDCODE),0	
	RET		
;
;
COUNT:			
	XOR	A	
	LD	(CNTS),A	
	LD	B,20	
	LD	C,23	
	LD	HL,KYORI	
COUNT0:			
	LD	A,(CNTS)	
	INC	A	
	LD	(CNTS),A	
	LD	A,(HL)	
	INC	A	
	LD	(HL),A	
	CP	10	
	PUSH	AF	
	JR	NZ,COUNT1	
	LD	(HL),0	
COUNT1:			
	POP	