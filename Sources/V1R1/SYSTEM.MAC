;****************************************
;*					*
;*  CP/M BDOS ACCESS LIBRALY            *
;*	FROM INTERFACE MAG. '82-12	*
;*       AND PC-8801 HARD WARE HANDLER  *
;*					*
;****************************************
.Z80
	TITLE	'SYSTEM LIBRALY FOR CP/M'
BDOS	EQU	0005H
;
;
UBDOS:
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	C,A
	CALL	BDOS
	POP	HL
	POP	DE
	POP	BC
	RET
;
;CONSOLE INPUT SUB.
;
CONIN::	LD	A,1
	CALL	UBDOS
	RET
;
;CONSOLE OUTPUT SUB.
;
CONOUT::LD	A,2
	CALL	UBDOS
	RET
;
;CONSOLE STATUS READ SUB.
;
CONSTS::LD	A,11
	CALL	UBDOS
	RET
;
;INPUT 1 LINE FROM CONSOLE
;
RDBUFF::
	LD	A,10
	CALL	UBDOS
	PUSH	HL
	LD	L,E
	LD	H,D
	LD	A,(HL)
	INC	HL
	CP	(HL)
	JR	Z,RCNG
;SET STRING TERMINATER
	LD	A,(HL)
	INC	HL
	LD	E,A
	LD	D,0
	ADD	HL,DE
	LD	(HL),0
	LD	A,1
	POP	HL
	RET
;ERROR RETURN
RCNG:	LD	A,0
	POP	HL
	RET
;
;PRINT STRING
;
PRSTR::			;DE:STRING ADRS
	LD	A,9
	CALL	UBDOS
	RET
;
;DIRECT CONSOLE INPUT/OUTPUT
;
;
;
KEEPCH:	DEFS	1
;
;
;
DCINIT::
	LD	A,0
	LD	(KEEPCH),A
	RET
;
DCSTS0:	LD	A,6
	LD	E,0FFH
	CALL	UBDOS
	RET
;
DCSTS::	LD	A,(KEEPCH)
	AND	A
	RET	NZ
	CALL	DCSTS0
	LD	A,(KEEPCH)
	RET
;
DCIN::	CALL	DCSTS
	AND	A
	JR	Z,DCIN
	PUSH	AF
	LD	A,0
	LD	(KEEPCH),A
	POP	AF
	RET
;
DCOUT::	LD	A,6
	CALL	UBDOS
	RET
;
;PRINT CR/LF SUB.
;
PRCRLF::
	PUSH	DE
	LD	E,0DH
	CALL	CONOUT
	LD	E,0AH
	CALL	CONOUT
	POP	DE
	RET
;
;
;
FCBA:	DEFS	2	;FCB ADDRESS
;
;
;
;	SET FCB ADDRESS SUB.
;
SETFCB::		;ENTRY DE:BLOCK BEGIN
	LD	(FCBA),DE
	RET
;
;	CLEAR FCB SUB.
;
CLEAR:			;ENTRY DE:BLOCK BEGIN
			;A:CLEAR CODE
			;B:CLEAR SIZE
	LD	(DE),A
	INC	DE
	DJNZ	CLEAR
	RET
;
;CLEAR FCB'S DRIVE,FNAME,FTYPE FIELD
;
CLRFCB::
	PUSH	BC
	PUSH	DE
	LD	DE,(FCBA)
	LD	(DE),A
	LD	A,0
	INC	DE
	LD	A,20H
	LD	B,8+3
	CALL	CLEAR
	POP	DE
	POP	BC
	RET
;
;CLEAR FCB'S PARAMETER FIELD
;
CLRPMF::
	PUSH	BC
	PUSH	DE
	PUSH	HL
	LD	HL,(FCBA)
	LD	DE,1+8+3
	ADD	HL,DE
	EX	DE,HL
	LD	A,0
	LD	B,33-(1+8+3)
	CALL	CLEAR
	POP	HL
	POP	DE
	POP	BC
	RET
;
;CHECK VARID DRIVE NAME
;
OK:	LD	A,1
	RET
NG:	LD	A,0
	RET
;
VRDDRV:		;ENTRY DE:STRING ADRS
		;EXIT ACC:NON-ZERO FOR OK
;	CHECK DRIVE NAME
	LD	A,(DE)	;READ STRING
	CP	'A'	;CHECK MIN LIMIT
	JR	C,NG
	CP	'P'+1
	JR	NC,NG
	INC	DE
	LD	A,(DE)
	DEC	DE
	CP	':'
	JR	NZ,NG
	JR	Z,OK
;
;CHECK SEPARATER CHRS
;
SPACER:		;ENTRY DE:STRING ADRS
		;EXIT ACC:NON-ZERO FOR SPACER
	LD	A,(DE)
	AND	A
	JP	Z,OK	;CHECK NULL(STR END)
	CP	' '
	JP	Z,OK
	CP	'.'
	JP	Z,OK
	CP	','
	JP	Z,OK
	CP	'='
	JP	Z,OK
	JP	NG
;
;CHECK FILE NAME
;
IVRTBL:
	DEFB	'().,:;=*?[]',0
;
VRDNAM:			;ENTRY DE:STRING ADRS
			;ACC NON-ZERO FOR OK
	LD	A,(DE)
	CP	21H
	JR	C,NG
	CP	5BH
	JR	NC,NG
;
	PUSH	HL
	LD	HL,IVRTBL
VN1:	LD	A,(HL)
	AND	A
	JR	Z,VNOK
	LD	A,(DE)
	CP	(HL)
	JR	Z,VNNG
	INC	HL
	JR	VN1
VNOK:	POP	HL
	JP	OK
VNNG:	POP	HL
	JP	NG
;
;SET FILE NAME OR TYPE
;
CPYNAM:		;ENTRY DE:STRING ADRS
		;      HL:FCB ADRS
		;      B:MAX NAME COUNT
		;EXIT ACC NON-ZERO FOR OK
	CALL	VRDNAM
	AND	A
	RET	Z
COPN1:	LD	A,(DE)
	LD	(HL),A
	INC	DE
	INC	HL
	DEC	B
	JR	Z,COPN2
	CALL	VRDNAM
	AND	A
	JR	NZ,COPN1
;PATCH INVARID NAME
COPN2:	CALL	SPACER
	RET
;
;MAKE FCB
;
MAKFCB::		;ENTRY DE:STRING ADRS
			;EXIT ACC:NON-ZERO FOR OK
	CALL	CLRFCB
	LD	HL,(FCBA)
	CALL	VRDDRV
	AND	A
	JR	Z,MF1
;CATCH DRIVE NAME
	LD	A,(DE)
	SUB	40H
	LD	(HL),A
	INC	DE
	INC	DE
;CHECK FILE NAME
MF1:	INC	HL
	LD	B,8
	CALL	CPYNAM
	AND	A
	RET	Z
;CHECK '.'
	LD	A,(DE)
	CP	'.'
	JP	NZ,OK
	INC	DE
;SET FCB'S FILE TYPE AREA
	PUSH	DE
	LD	HL,(FCBA)
	LD	DE,1+8
	ADD	HL,DE
	POP	DE
;CHECK FILE NAME
	LD	B,3
	CALL	CPYNAM
	AND	A
	RET	Z
;CHECK 2nd '.' (ERROR)
	LD	A,(DE)
	CP	'.'
	JP	Z,NG
	JP	NZ,OK
;
;GET FILE NAME
;
;
;
FNBUFF:	DEFS	2+15
;
;
;
GETFN::		;ENTRY DE:MSG STRING ADRS
		;EXIT ACC:NON-ZERO FOR OK
	CALL	PRCRLF
	CALL	PRSTR
	LD	A,15
	LD	(FNBUFF),A
	LD	DE,FNBUFF
	CALL	RDBUFF
	AND	A
	RET	Z
	LD	DE,FNBUFF+2
	CALL	MAKFCB
	RET
;
;GET FILE NAME
;WITH MESSAGE 'TYPE FILE NAME:'
;
TFNAM:	DEFB	'TYPE FILE NAME:$'
FNERR:	DEFB	0DH,0AH,'FILE NAME ERROR!$'
DSPFNE:	LD	DE,FNERR
	CALL	PRSTR
	RET
ASKFN::
	LD	DE,TFNAM
	CALL	GETFN
	AND	A
	RET	NZ
	CALL	DSPFNE
	LD	A,0
	RET
;
;OPEN FILE
;
OPEN::	CALL	CLRPMF
	LD	A,15
OPEN1:	LD	DE,(FCBA)
	CALL	UBDOS
	CP	0FFH
	JP	NZ,OK
	JP	Z,NG
;
;CLOSE FILE
;
CLOSE::	LD	A,16
	JR	OPEN1
;
;MAKE FILE
;
MAKE::	CALL	CLRPMF
	LD	A,22
	JR	OPEN1
;
;DELETE FILE
;
DELETE::LD	A,19
	JR	OPEN1
;
;RENAME FILE
;
RENAME::LD	A,23
	JR	OPEN1
;
;READ FILE
;
READ::	LD	A,20
READ1:	LD	DE,(FCBA)
	CALL	UBDOS
	AND	A
	JP	Z,OK
	JP	NZ,NG
;
;WRITE FILE
;
WRITE::	LD	A,21
	JR	READ1
;
;SET DMA ADRS
;
SETDMA::LD	A,26
	CALL	UBDOS
	RET
;
;OUTPUT FILE ACCESS ERROR
;
OPNERR:	DEFB	'File Not Found!$'
MAKERR:	DEFB	'Directory Full!$'
REDERR:	DEFB	'End Of File!$'
WRTERR:	DEFB	'Disk Full!$'
;
DSPOER:	LD	DE,OPNERR
DISPE:	CALL	PRCRLF
	CALL	PRSTR
	RET
;
DSPMER:	LD	DE,MAKERR
	JR	DISPE
;
DSPRER:	LD	DE,REDERR
	JR	DISPE
;
DSPWER:	LD	DE,WRTERR
	JR	DISPE
;
;FILE ACCESS WITH ERROR PROCESS
;
OPENER::
	CALL	OPEN
OPENE1:	AND	A
	RET	NZ
	CALL	DSPOER
	LD	A,0
	RET
;
CLOSER::
	CALL	CLOSE
	JR	OPENE1
;
MAKEER::
	CALL	MAKE
	AND	A
	RET	NZ
	CALL	DSPMER
	LD	A,0
	RET
;
DELEER::
	CALL	DELETE
	JR	OPENE1
;
RENAER::
	CALL	RENAME
	JR	OPENE1
;
READER::
	CALL	READ
	AND	A
	RET	NZ
	CALL	DSPRER
	LD	A,0
	RET
;
WRITER::
	CALL	WRITE
	AND	A
	RET	NZ
	CALL	DSPWER
	LD	A,0
	RET
;
	END
DX+16)	
	LD	B,A	
	LD	A,C	
	ADD	A,(IX+DY+16)	
	LD	C,A	
	CALL	SUBHL	
	LD	A,(HL)	
	OR	A	
	JR	Z,MSL120	
	BIT	7,A	
	JR	Z,MSL140	
MSL120:			
	CALL	RND	
	AND	7	
	ADD	A,85H	
	LD	(HL),A	
MSL140:			
	POP	BC	
	POP	HL	
;
	CALL	DXDY	
	JR	NC,MSL900	
	LD	A,(HL)	
	OR	A	
	JR	Z,MSL200	
	AND	80H	
	JR	Z,MISBOM	
MSL200:			
	EX	AF,AF'	
	DEC	A	
	JR	NZ,MSL100	
	LD	(IX+XPOS),B	
	LD	(IX+YPOS),C	
	LD	(IX+SUBAL),L	
	LD	(IX+SUBAH),H	
	LD	A,0	
	LD	B,(IX+IDCODE)	
	CALL	MSUB	
	JR	NZ,MISBOM	
	RET		
M